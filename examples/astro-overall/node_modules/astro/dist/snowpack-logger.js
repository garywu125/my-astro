// src/logger.ts
import "source-map-support/register.js";
import {bold, blue, red, grey, underline, yellow} from "kleur/colors";
import {Writable} from "stream";
import {format as utilFormat} from "util";
import stringWidth from "string-width";
var defaultLogDestination = new Writable({
  objectMode: true,
  write(event, _, callback) {
    let dest = process.stderr;
    if (levels[event.level] < levels["error"]) {
      dest = process.stdout;
    }
    let type = event.type;
    if (type !== null) {
      if (event.level === "info") {
        type = bold(blue(type));
      } else if (event.level === "warn") {
        type = bold(yellow(type));
      } else if (event.level === "error") {
        type = bold(red(type));
      }
      dest.write(`[${type}] `);
    }
    dest.write(utilFormat(...event.args));
    dest.write("\n");
    callback();
  }
});
var defaultLogOptions = {
  dest: defaultLogDestination,
  level: "info"
};
var levels = {
  debug: 20,
  info: 30,
  warn: 40,
  error: 50,
  silent: 90
};
function log(opts = defaultLogOptions, level, type, ...args) {
  const event = {
    type,
    level,
    args,
    message: ""
  };
  if (levels[opts.level] > levels[level]) {
    return;
  }
  opts.dest.write(event);
}
function debug(opts, type, ...messages) {
  return log(opts, "debug", type, ...messages);
}
function info(opts, type, ...messages) {
  return log(opts, "info", type, ...messages);
}
function warn(opts, type, ...messages) {
  return log(opts, "warn", type, ...messages);
}
function error(opts, type, ...messages) {
  return log(opts, "error", type, ...messages);
}
var logger = {
  debug: debug.bind(null, defaultLogOptions),
  info: info.bind(null, defaultLogOptions),
  warn: warn.bind(null, defaultLogOptions),
  error: error.bind(null, defaultLogOptions)
};
var defaultLogLevel;
if (process.argv.includes("--verbose")) {
  defaultLogLevel = "debug";
} else if (process.argv.includes("--silent")) {
  defaultLogLevel = "silent";
} else {
  defaultLogLevel = "info";
}

// src/snowpack-logger.ts
function configureSnowpackLogger(logger2) {
  if (defaultLogLevel === "debug") {
    logger2.level = "debug";
  } else if (defaultLogLevel === "silent") {
    logger2.level = "silent";
  }
}
export {
  configureSnowpackLogger
};
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsiLi4vc3JjL2xvZ2dlci50cyIsICIuLi9zcmMvc25vd3BhY2stbG9nZ2VyLnRzIl0sCiAgIm1hcHBpbmdzIjogIjtBQUFBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFNTyxJQUFNLHdCQUF3QixJQUFJLFNBQVM7QUFBQSxFQUNoRCxZQUFZO0FBQUEsRUFDWixNQUFNLE9BQW1CLEdBQUcsVUFBVTtBQUNwQyxRQUFJLE9BQXNCLFFBQVE7QUFDbEMsUUFBSSxPQUFPLE1BQU0sU0FBUyxPQUFPLFVBQVU7QUFDekMsYUFBTyxRQUFRO0FBQUE7QUFFakIsUUFBSSxPQUFPLE1BQU07QUFDakIsUUFBSSxTQUFTLE1BQU07QUFDakIsVUFBSSxNQUFNLFVBQVUsUUFBUTtBQUMxQixlQUFPLEtBQUssS0FBSztBQUFBLGlCQUNSLE1BQU0sVUFBVSxRQUFRO0FBQ2pDLGVBQU8sS0FBSyxPQUFPO0FBQUEsaUJBQ1YsTUFBTSxVQUFVLFNBQVM7QUFDbEMsZUFBTyxLQUFLLElBQUk7QUFBQTtBQUdsQixXQUFLLE1BQU0sSUFBSTtBQUFBO0FBR2pCLFNBQUssTUFBTSxXQUFXLEdBQUcsTUFBTTtBQUMvQixTQUFLLE1BQU07QUFFWDtBQUFBO0FBQUE7QUFnQkcsSUFBTSxvQkFBZ0M7QUFBQSxFQUMzQyxNQUFNO0FBQUEsRUFDTixPQUFPO0FBQUE7QUFVVCxJQUFNLFNBQXNDO0FBQUEsRUFDMUMsT0FBTztBQUFBLEVBQ1AsTUFBTTtBQUFBLEVBQ04sTUFBTTtBQUFBLEVBQ04sT0FBTztBQUFBLEVBQ1AsUUFBUTtBQUFBO0FBSUgsYUFBYSxPQUFtQixtQkFBbUIsT0FBb0IsU0FBd0IsTUFBa0I7QUFDdEgsUUFBTSxRQUFvQjtBQUFBLElBQ3hCO0FBQUEsSUFDQTtBQUFBLElBQ0E7QUFBQSxJQUNBLFNBQVM7QUFBQTtBQUlYLE1BQUksT0FBTyxLQUFLLFNBQVMsT0FBTyxRQUFRO0FBQ3RDO0FBQUE7QUFHRixPQUFLLEtBQUssTUFBTTtBQUFBO0FBSVgsZUFBZSxNQUFrQixTQUF3QixVQUFzQjtBQUNwRixTQUFPLElBQUksTUFBTSxTQUFTLE1BQU0sR0FBRztBQUFBO0FBSTlCLGNBQWMsTUFBa0IsU0FBd0IsVUFBc0I7QUFDbkYsU0FBTyxJQUFJLE1BQU0sUUFBUSxNQUFNLEdBQUc7QUFBQTtBQUk3QixjQUFjLE1BQWtCLFNBQXdCLFVBQXNCO0FBQ25GLFNBQU8sSUFBSSxNQUFNLFFBQVEsTUFBTSxHQUFHO0FBQUE7QUFJN0IsZUFBZSxNQUFrQixTQUF3QixVQUFzQjtBQUNwRixTQUFPLElBQUksTUFBTSxTQUFTLE1BQU0sR0FBRztBQUFBO0FBeUM5QixJQUFNLFNBQVM7QUFBQSxFQUNwQixPQUFPLE1BQU0sS0FBSyxNQUFNO0FBQUEsRUFDeEIsTUFBTSxLQUFLLEtBQUssTUFBTTtBQUFBLEVBQ3RCLE1BQU0sS0FBSyxLQUFLLE1BQU07QUFBQSxFQUN0QixPQUFPLE1BQU0sS0FBSyxNQUFNO0FBQUE7QUFZbkIsSUFBSTtBQUNYLElBQUksUUFBUSxLQUFLLFNBQVMsY0FBYztBQUN0QyxvQkFBa0I7QUFBQSxXQUNULFFBQVEsS0FBSyxTQUFTLGFBQWE7QUFDNUMsb0JBQWtCO0FBQUEsT0FDYjtBQUNMLG9CQUFrQjtBQUFBOzs7QUNwS2IsaUNBQWlDLFNBQStCO0FBQ3JFLE1BQUksb0JBQW9CLFNBQVM7QUFDL0IsWUFBTyxRQUFRO0FBQUEsYUFDTixvQkFBb0IsVUFBVTtBQUN2QyxZQUFPLFFBQVE7QUFBQTtBQUFBOyIsCiAgIm5hbWVzIjogW10KfQo=
