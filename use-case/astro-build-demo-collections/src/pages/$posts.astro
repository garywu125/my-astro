---
import Post from '../components/Post.astro'
// Define the `collection` prop.
const { collection } = Astro.props;

// Define a `createCollection` function.
// In this example, we'll create a new page for every single pokemon.
export async function createCollection() {
	const allPostsResponse = await fetch('https://jsonplaceholder.typicode.com/posts');
  const allPosts= await allPostsResponse.json();
  return {
    // `routes` defines the total collection of routes as data objects.
    routes: allPosts.map((p) => {
      const params = {title: p.title, id: p.id};
      return params;
    }),
    // `permalink` defines the final URL for each route object defined in `routes`.
    permalink: ({ params }) => `/posts/${params.id}`,
    // `data` is now responsible for return the data for each page.
    // Luckily we had already loaded all of the data at the top of the function,
    // so we just filter the data here to group pages by first letter.
    // If you needed to fetch more data for each page, you can do that here as well.
    // Note: data() is expected to return an array!
    async data({ params }) {
      return [allPosts[params.id]];
    },
    // Note: The default pageSize is fine because technically only one data object
    // is ever returned per route. We set it to Infinity in this example for completeness.
    pageSize: Infinity,
  };
}
---
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>{collection.params?.title}</title>
    <link rel="icon" type="image/svg+xml" href="/favicon.svg">
    <link rel="stylesheet" href="/style/global.css">
    <link rel="stylesheet" href="/style/home.css">

    <style>
    </style>
</head>
<body>
    <main>
		<Post title={collection.params?.title} body={collection.data[0]?.body}/>
    </main>
</body>
</html>
